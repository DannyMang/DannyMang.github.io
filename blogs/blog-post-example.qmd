---
title: "Getting Started with Data Visualization in R"
author: "Data Scientist"
date: "2024-01-15"
categories: [r, data-viz, tutorial]
image: "preview.jpg"
draft: false
format:
  html:
    code-fold: false
    code-tools: true
---

# Welcome to My Blog!

Today I want to share some insights about creating effective data visualizations using R and ggplot2. This post will walk through some practical examples that you can try yourself.

## Why Data Visualization Matters

Data visualization is crucial because:

-   It makes complex data accessible
-   Reveals patterns and trends
-   Enables better decision making
-   Communicates insights effectively

## Setting Up Our Environment

First, let's load the necessary libraries:

```{python setup}
#| message: false
#| warning: false

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np

# Set a consistent style
plt.style.use('seaborn-v0_8')
sns.set_palette("husl")
```

## Exploring the Palmer Penguins Dataset

We'll use the famous Palmer Penguins dataset for our examples:

```{python data-explore}
# Load the penguins dataset (we'll create sample data)
# In practice, you'd load this from seaborn: sns.load_dataset('penguins')
np.random.seed(42)

# Create sample penguin data
species = ['Adelie', 'Chinstrap', 'Gentoo']
n_samples = 150

data = {
    'species': np.random.choice(species, n_samples),
    'bill_length_mm': np.random.normal(40, 5, n_samples),
    'bill_depth_mm': np.random.normal(18, 3, n_samples),
    'body_mass_g': np.random.normal(4000, 500, n_samples)
}

penguins = pd.DataFrame(data)

# Take a look at our data
print(penguins.head())
print("\nDataset summary:")
print(penguins.describe())
```

### Basic Scatter Plot

Let's start with a simple relationship between bill length and bill depth:

```{python}
#| label: fig-basic-scatter
#| fig-cap: "Relationship between bill length and depth"
#| fig-width: 8
#| fig-height: 6

plt.figure(figsize=(10, 6))
for species in penguins['species'].unique():
    data = penguins[penguins['species'] == species]
    plt.scatter(data['bill_length_mm'], data['bill_depth_mm'], 
                label=species, alpha=0.7, s=60)

plt.xlabel('Bill Length (mm)')
plt.ylabel('Bill Depth (mm)')
plt.title('Bill Length vs Bill Depth\nPalmer Penguins Dataset')
plt.legend(title='Species')
plt.grid(True, alpha=0.3)
plt.tight_layout()
plt.show()
```

### Adding Trend Lines

We can enhance our plot by adding trend lines for each species:

```{python}
#| label: fig-trends
#| fig-cap: "Scatter plot with trend lines by species"
#| fig-width: 12
#| fig-height: 4

fig, axes = plt.subplots(1, 3, figsize=(15, 5))
fig.suptitle('Bill Dimensions by Species', fontsize=16)

for i, species in enumerate(penguins['species'].unique()):
    data = penguins[penguins['species'] == species]
    axes[i].scatter(data['bill_length_mm'], data['bill_depth_mm'], alpha=0.7)
    
    # Add trend line
    z = np.polyfit(data['bill_length_mm'], data['bill_depth_mm'], 1)
    p = np.poly1d(z)
    axes[i].plot(data['bill_length_mm'], p(data['bill_length_mm']), "r--", alpha=0.8)
    
    axes[i].set_title(species)
    axes[i].set_xlabel('Bill Length (mm)')
    if i == 0:
        axes[i].set_ylabel('Bill Depth (mm)')
    axes[i].grid(True, alpha=0.3)

plt.tight_layout()
plt.show()
```

## Distribution Analysis

Let's examine the distribution of body mass across species:

```{python}
#| label: fig-distribution
#| fig-cap: "Body mass distribution by species"
#| fig-width: 8
#| fig-height: 10

fig, axes = plt.subplots(3, 1, figsize=(10, 12))
fig.suptitle('Distribution of Body Mass by Species', fontsize=16)

for i, species in enumerate(penguins['species'].unique()):
    data = penguins[penguins['species'] == species]['body_mass_g']
    axes[i].hist(data, bins=20, alpha=0.7, edgecolor='black')
    axes[i].set_title(f'{species} Penguins')
    axes[i].set_xlabel('Body Mass (g)')
    axes[i].set_ylabel('Count')
    axes[i].grid(True, alpha=0.3)

plt.tight_layout()
plt.show()
```

### Box Plot Comparison

A box plot gives us a different perspective on the same data:

```{python}
#| label: fig-boxplot
#| fig-cap: "Body mass comparison using box plots"
#| fig-width: 8
#| fig-height: 6

plt.figure(figsize=(10, 6))

# Create box plot
species_data = [penguins[penguins['species'] == species]['body_mass_g'] 
                for species in penguins['species'].unique()]
species_names = penguins['species'].unique()

plt.boxplot(species_data, labels=species_names)

# Add scatter points
for i, species in enumerate(species_names):
    data = penguins[penguins['species'] == species]['body_mass_g']
    x = np.random.normal(i+1, 0.04, size=len(data))
    plt.scatter(x, data, alpha=0.5, s=20)

plt.title('Body Mass Distribution by Species')
plt.xlabel('Species')
plt.ylabel('Body Mass (g)')
plt.grid(True, alpha=0.3)
plt.tight_layout()
plt.show()
```

## Statistical Summary

Let's create a summary table of our findings:

```{python}
#| label: tbl-summary
#| tbl-cap: "Summary statistics by species"

summary_stats = penguins.groupby('species').agg({
    'bill_length_mm': ['count', 'mean'],
    'bill_depth_mm': 'mean',
    'body_mass_g': 'mean'
}).round(1)

# Flatten column names
summary_stats.columns = ['Count', 'Avg Bill Length (mm)', 'Avg Bill Depth (mm)', 'Avg Body Mass (g)']
summary_stats = summary_stats.reset_index()

print("Summary Statistics by Species")
print("=" * 50)
for idx, row in summary_stats.iterrows():
    print(f"{row['species']}: {int(row['Count'])} penguins, "
          f"Bill Length: {row['Avg Bill Length (mm)']}mm, "
          f"Bill Depth: {row['Avg Bill Depth (mm)']}mm, "
          f"Body Mass: {int(row['Avg Body Mass (g)'])}g")
```

## Key Takeaways

From our analysis, we can see that:

1.  **Adelie penguins** have shorter, deeper bills
2.  **Chinstrap penguins** have longer, thinner bills\
3.  **Gentoo penguins** are the largest and have intermediate bill proportions
4.  Each species occupies a distinct ecological niche

::: callout-tip
## Next Steps

Try modifying the code above with different variables like `flipper_length_mm` or create your own visualizations using other datasets!
:::

## Resources

-   [ggplot2 documentation](https://ggplot2.tidyverse.org/)
-   [Palmer Penguins package](https://allisonhorst.github.io/palmerpenguins/)
-   [R for Data Science](https://r4ds.had.co.nz/)

------------------------------------------------------------------------

*Thanks for reading! Feel free to reach out with questions or suggestions for future posts.*
